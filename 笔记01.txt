快捷键:
                代码格式化:Alt+Shift+F
	ctrl + Enter  光标移到下一行

day01-2019年7月23日
1. vscode内置了Emmet插件，让我们写代码更方便。可以百度搜索一下,了解常用的快捷键
2. 单标签也称空标签或自结束标签
3. <!DOCTYPE html>  声明文档类型，告诉浏览器以HTML5的标准去解析页面
4. meta标签用于设置网页的元数据
    <meta charset="utf-8" /> 指定字符集编码, utf-8指优化后的全球码
    <meta name="keywords" content="xxx" />设置关键字 , 用于搜索引擎优化
    <meta name="description" content="xxxx" />设置描述信息
5. h${$级标题}*6
          $  自增符号
          {标签的文本内容}
          *6 生成6个这样的标签
6. 换行标签<br/>
   分割线标签<hr/>
7. 文本格式化标签    
     斜体<em>   em 标签用于表示一段内容中的着重点。
    加粗<strong>   strong 标签用于表示一个内容的重要性。
    斜体/加粗 <i> <b> 单纯的表示斜体/加粗，没有语义。
    上标/下标 <sup> <sub> ，比如: 5<sup>2</sup> H<sub>2</sub>O。
     下划线/删除线 <ins> <del>。 
8. 转义字符    
    空格 &nbsp;   &#160;
    小于号 &lt;   &#60;
    大于号 &gt;   &#62;
9.<img  src="图像路径"  alt="图像不显示时显示的内容"/>
     img标签用来引入图像
     src 属性用于指定图像文件的路径
     alt 属性用于指定图片未找到时，显示的内容。
10. 相对路径
      ../返回上级目录
      xx/进入下级目录
     绝对路径:
     本地绝对路径 C:\Users\yy\Desktop\逍遥游\论文等资料\图片
     网络路径   http.......
11. 链接标签
    <a href="跳转目标"  target="目标窗口的弹出方式">文本或图像</a>
    href 用于指定链接目标的 url 地址，当为标签应用 href 属性时，它就具有了超链接的功能。
    target：用于指定链接页面的打开方式。
 	   _self  在当前窗口打开（默认值）。
	    _blank  在新窗口中打开。
    不仅可以创建文本超链接，在网页中各种网页元素，如图像、表格、音频、视频等都可以添加超链接。
12. 列表标签
     <ul>
        <li>无序列表</li>
     </ul>
     <ol>
        <li>有序列表</li>
     </ol>
     <dl>
        <dt>名词</dt>
        <dd>名词解释1</dd>
        <dd>名词解释2</dd>
      </dl>
13. 表格标签
      <table>
        <tr>
            <th>周一</th>
            <th>周二</th>
            <th>周三</th>
        </tr>
        <tr>
           <td>语文</td> 
           <td>数学</td> 
           <td>英语</td> 
        </tr>
        <tr>
            <td>物理</td> 
            <td>化学</td> 
            <td>生物</td> 
        </tr>
    </table>
14.合并单元格
	rowspan 规定单元格横跨的行数
	colspan 规定单元格横跨的列数


day02-7.24
1. 表单:由表单控件（也称为表单元素）、提示信息和表单域 3 个部分构成。
2. input控件(单标签)
    属性:type   属性值:  text  文本输入框
	                 password  密码输入框
	  	radio  单选按钮    (name相同)
		checkbox  复选框
		button 普通按钮
		submit 提交按钮
		reset  重置按钮
		image 图像形式的提交按钮,与src配合使用
		file  文件域(选择文件)
    属性name   控件的名称
         value  input控件中的默认文本值
        checked   定义选择控件默认被选中的项
         maxlength   允许输入的最多字符数
label标签(与for属性一同使用)   用于绑定一个表单元素, 当点击 label 标签的时候, 被绑定的表单元素就会获得输入焦点。
  	 <label for="user">文本输入框</label> <input id="user" disabled maxlength="5" type="text">
textarea控件(文本域)    创建多行文本输入框
               语法: <textarea cols="每行中的字符数" rows="显示的行数">文本内容</textarea>
 select控件(与option标签一同使用)   定义下拉菜单
	语法:<select>
	<option>选项1</option>
	<option>选项2</option>
            </select>
                在 <option></option> 中定义 selected="selected"属性时，当前项即为默认选中项。可以简写为selected
form 标签    定义表单域，form 中的所有内容都会被提交给服务器
	语法:<form action="url地址" method="提交方式" name="表单名称">各种表单控件</form>
表单补充属性:
<fieldset> <legend> 可以实现表单的分组。
          	语法:  <fieldset>
                       <legend>基本信息</legend>
	      各种表单控件
	      <fieldset>
get 提交
      参数被放到地址提交，比如: /D:/abc?username=张三&pwd=123&sex=0&experience=0
      不安全
      地址栏拼接的参数长度有限，一般是<4k
       一般用于获取数据
post 提交
    地址栏不显示提交内容，在请求体显示
     相对安全
     提交的数据量没有上限
     一般用于提交保存数据
	disabled 禁用
	readonly 只读
	placeholder 占位符提供可描述输入字段预期值的提示信息
	autofocus 元素应该自动获得焦点
	multiple 多文件上传
3.  title属性   鼠标悬停时显示
4. CSS书写位置
    行内样式
    内部样式
    外部引入 <link rel="" href="">
5. CSS 选择器:
    标签选择器
    id 选择器
    class 选择器
    交集选择器 不用隔开
    并集选择器 逗号隔开
    后代选择器 空格隔开
    通配符
6. CSS 权重问题
   行内样式1000 > id 选择器100 > class 选择器10 >标签选择器1>通配选择器/继承属性0
7.CSS 常见单位
    px 像素单位
    百分比，通常用来表示长度或高度，相较于父类元素的百分比。
    em 基于当前字体的倍数。
8.颜色
    预定义颜色：blue、red 等。
    十六进制：，比如：#ff00ff ,分别表示 red、green、blue
     rgb      rgb(0,0,255) ==> 蓝色。rgb 和十六进制是可以相互转换的。
     rgba      rgba(0,0,255,0.5)。跟 rgb 一样，a 是透明度：0~1，0.5==> .5
9. CSS 常用属性
        width / height	宽高	px   百分比   em 等
        background-color背景颜色     red等
        cololr 字体颜色	 red等
        font-size  字体大小   px em 等
        text-align  文字对齐方式	center  left  right
        text-indent  首行缩进     px em 等
        font-family   字体	微软雅黑 Microsoft YaHei、黑体 SimHei等
        font-weight   字体加粗	100-900     bolder加粗   lighter正常    normal变细
        font-style  是否斜体      Italic 斜体 / normal 正常
        line-height   行高      单位可以是 px /倍数 / 百分比 
       可用于设置文字的行间距.          单行文字垂直居中 ：行高=父类盒子高度
        font	字体缩写	  比如   font:  italic  bolder  20px/1.2    '宋体'   '黑体'  ( 顺序不可以变,但属性值可以减少)
10.标签的表现形式
     块状标签：独占一行，设置宽高有效。比如：div  p  h1~h6  form  table  hr  br  ul>li  ol>li  dl>dt/dd
     行内标签：同一行显示，设置宽高无效。比如： a  span  strong  del  ins  em  i  b
     行内块标签：同一行显示，设置宽高有效。比如: input  select  img  button
11. display属性    用来修改元素的性质。
       属性值:   block：设置元素为块元素
                    inline：设置元素为行内元素
                    inline-block：设置元素为行内块元素
       转换的必要性：比如可以把a标签转换为块状元素，设置宽高，使用户可点击的区域增大，进而实现一个按钮的样式。
12.  list-style: none    清除项目符号

day03-7.25
1.背景图片属性
     background-color  背景颜色
     background-image    背景图片  url(“xx.png”)
     background-repeat	平铺方式	repeat 、 no-repeat 、 repeat-x 、 repeat-y
     background-position	图片位置	left、 right、 top、 bottom、 center
            background-position后面跟两个值, 第一个值 图片左侧距离盒子左侧的距离
             第二个值 图片顶部 距离盒子顶部的值
     background-attachment	背景滚动 
	scroll(基于父元素定位)  fixed (基于页面视口定位）
      background	简写（顺序不能错）	background: green url(1.jpg) no-repeat center center fixed;
2. 盒子模型
    content内容区域、padding（内边距）、border（边框）、margin外边距（盒子与盒子的距离）
3. padding
   padding:10px; 同时指定上左右下四个方向的内边距。
   padding-top、padding-left、padding-right、padding-bottom 分别用来指定四个方向的内边距。
   改变元素的大小
   为行内元素设置padding-top和padding-bottomw无效,对页面没有效果
4.border
	border:1px solid red; 分别指定了边框的宽度、颜色和样式，是一种缩写：border-width border-style border-color。(三者缺一不可)
                border-style: none (默认) / dashed(虚线) / dotted（点） / solid(实线) / double(双实线)。
                也可以单独设置某一条边框：border-right: 20px solid blue;
           改变元素的大小。
5. margin
	提供了四个方向margin-top/margin-right/margin-bottom/margin-left。
	margin: xxx auto;可以使块状元素水平居中。
	嵌套崩塌：两个盒子发生嵌套的时候，给子类设置 margin 会给父类造成一种崩塌现象，子类元素的 margin-top 没有效果，而是直接作用到父类元素。
	解决方案：
	1. 父类 overflow: hidden;
	2. 父类 设置极小的 padding 或者 border；
	margin重叠： 如果垂直方向上两个块状元素同时设置了 margin-bottom 和 margin-top，那么这两个值将会发生重叠，不会累加，哪个值大用哪个。
	margin-top/margin-bottom 对于行内元素无效。
6. 显示和隐藏
	display:none; 隐藏元素，不占位置。
	visibility:hidden; 隐藏元素，占位置
7. overflow
	overflow 指定标签里面的内容超出了样式的宽度和高度时如何处理。
	visible：默认值
	scroll：添加滚动条
	auto：根据需要添加滚动条
	hidden：隐藏超出的内容
8.浮动
     使元素脱离原来的文本流，在父元素中浮动起来。
       float 属性。
       属性值：none：不浮动
	 left：向左浮动
	 right：向右浮动
9. 浮动的表现形式
	元素浮动后，下方的元素上移。下方元素中的内容将会围绕在上方元素的周围。
	浮动会使元素完全脱离文本流，不再在文档中在占用位置。
	元素设置浮动以后，会一直向上漂浮直到遇到父元素的边界或者其他浮动元素。
	浮动元素不会撑开父元素。
	块级元素和行内元素都可以浮动，行内元素浮动以后会变为块级元素,即使设置 display:inline ,其依然是个块元素。
	当一个块级元素浮动以后，宽度会默认被内容撑开，所以当漂浮一个块级元素时我们都会为其指定一个宽度


day04-7.26
1. 浮动的影响
    子元素设置浮动之后,子类元素脱离了文档流，无法把父类盒子撑开
    清除浮动的影响：
     方式一:严格计算并设置父类盒子高度
     方式二:在浮动元素的最后面追加一个空的 div,设置 clear:both 即可清除浮动的影响
                 clear: left/right/both 不允许当前元素的 left/right/both 有浮动元素。	
    方式三:为父元素设置属性 overflow: hidden;
2. 元素变成行内块元素后,display：inline-block ,标签的换行符会被显示为空格。(不理解)
3. 定位
    通过 position 属性可以实现元素的定位。元素定位之后，需要通过设置 left/right 和 top/bottom 值对元素定位。
    position 属性可以把一个元素放置到网页中的任何位置。
   属性值：
   	static（默认）
	relative
	absolute
	fixed
	sticky
4. relative 相对定位
             相对元素本身的位置定位。    
	不脱离文本流,占位置
	元素特性不变  不写宽度的话,依然继承父类元素宽度 100%
               相对定位会使元素的层级提升，使元素可以覆盖文本流中的元素。
5. fixed 固定定位
	元素会被锁定在屏幕的某个位置上，当访问者滚动网页时，固定元素会在屏幕上保持不动。 (相对于视口定位)
	固定定位不占据原来的位置，会脱离文档流。
 	- 可以将行内元素转换块元素。
6. absolute 绝对定位
	相对于离他最近的祖先定位元素进行定位,如果找不到祖先定位元素就相对视口展示的html标签部分定位
	脱离文本流。
	绝对定位的块元素的宽度会被其内容撑开。
	使行内元素变成块元素。
	一般使用绝对定位时会同时为其父元素指定一个相对定位，以确保元素可以相对于父元素进行定位。
7. sticky  粘性定位
	元素在跨越特定阈值前为相对定位，之后为固定定位。
8. z-index属性
        当元素开启定位以后就可以设置 z-index 这个属性。默认是 0。
        z-index 可以指定一个整数作为参数，值越大元素显示的优先级越高，也就是 z-index 值较大的元素会显示在网页的最上层。
9. 能用标准流就不用浮动, 能用浮动就不用定位


